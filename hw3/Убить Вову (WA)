#include "bits/stdc++.h"

using namespace std;

int main() {
    cin.tie(nullptr); cout.tie(nullptr);
    ios_base::sync_with_stdio(false);

    int n = 0, m = 0;
    cin >> n >> m;

    vector<int> used(n, 0);
    vector<vector<int>> v(n, vector<int> (m));

    for (auto &a : v) {
        for (auto &it : a) {
            cin >> it;
        }
    }

    int glob_cnt = 0;
    list<int> ans;
    set<pair<int, int>> work;

    for (int j = 0; j < m; ++j) {
        int cnt = 0;
        for (int i = 0; i < n; ++i) {
            if (!v[i][j]) {
                cnt++;
            }
        }
        work.insert({cnt, j});
    }

    while (!work.empty()) {
        bool change = false;
        pair<int, int> it = *work.rbegin();
        work.erase(prev(work.end()));

        int cnt = 0;
        for (int i = 0; i < n; ++i) {
            if (used[i] && !v[i][it.second]) {
                v[i][it.second] = 1;
                change = true;
            }
            if (!v[i][it.second]) {
                cnt++;
            }
        }
        if (change) {
            work.insert({cnt, it.second});
        } else if (cnt) {
            glob_cnt += cnt;
            for (int i = 0; i < n; ++i) {
                if (!v[i][it.second]) {
                    used[i] = 1;
                }
            }
            ans.push_back(it.second + 1);
        }
    }


    if (glob_cnt != n) {
        cout << "Impossible";
    } else {
        cout << ans.size() << "\n";
        for (auto it : ans) {
            cout << it << " ";
        }
    }

    return 0;
}