#include "bits/stdc++.h"

using namespace std;

int main() {
    cin.tie(nullptr); cout.tie(nullptr);
    ios_base::sync_with_stdio(false);

    int n = 0;
    cin >> n;

    // dp[i][j][k] - количество i значных чисел с суммой цифр j и произведением k
    vector<vector<vector<int>>> dp(n + 1, vector<vector<int>> (9 * n + 1, vector<int> (9 * n + 1, 0)));
    vector<vector<vector<string>>> prev(n + 1, vector<vector<string>> (9 * n + 1, vector<string> (9 * n + 1)));
    for (int i = 1; i <= min(9, n); ++i) {
        dp[1][i][i] = 1;
        prev[1][i][i] = to_string(i);
    }

    string ans;
    int cnt = 0;

    for (int i = 0; i < n; ++i) {
        ans.push_back('9');
    }

    for (int i = 2; i <= n; ++i) {
        for (int sum = 1; sum < min((int) dp[i].size(), i * 9 + 1); ++sum) {
            for (int mul = 0; mul < dp[i].size(); ++mul) {
                if (dp[i - 1][sum][0]) {
                    dp[i][sum][mul] += dp[i - 1][sum][0];
                    prev[i][sum][mul] = prev[i - 1][sum][0] + to_string(0);
                }
                for (int k = 1; k <= min(9, sum); ++k) {
                    if (mul % k == 0 && dp[i - 1][sum - k][mul / k]) {
                        dp[i][sum][mul] += dp[i - 1][sum - k][mul / k];
                        if (prev[i][sum][mul].empty() || prev[i - 1][sum - k][mul / k] + to_string(k) < prev[i][sum][mul]) {
                            prev[i][sum][mul] = prev[i - 1][sum - k][mul / k] + to_string(k);
                        }
                    }
                }
                if (mul == sum && i == n && dp[i][sum][mul]) {
                    ans = min(ans, prev[n][sum][mul]);
                    cnt += dp[n][sum][mul];
                }
            }
        }
    }

    if (n == 1) {
        cout << 10 << " " << 0;
    } else {
        cout << cnt << " " << ans;
    }

    return 0;
}