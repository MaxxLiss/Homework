#include "bits/stdc++.h"

using namespace std;

static const int mod = 1e9 + 7;

vector<int> c;
vector<vector<vector<int>>> dp;

//int f(int len, int prev_a, int prev_b, int add, string sa, string sb) {
int f(int len, int prev_a, int prev_b, int add) {
    if (dp[len][prev_a][add] != -1) {
//        cout << "!" << sa << " " << sb << " " << stoi(sa) + stoi(sb) << endl;
        return dp[len][prev_a][add];
    }
    if (len == c.size() && !add) {
//        cout << sa << " " << sb << " " << stoi(sa) + stoi(sb) << endl;
        return 1;
    }
    if (len >= c.size()) {
        return 0;
    }
    dp[len][prev_a][add] = 0;
    for (int i = 0; i < 10; ++i) {
        if (prev_a == i) {
            continue;
        }
        int b = c[len] - i + add * 10;
        if (b == prev_b || b < 0 || b > 9) {
            continue;
        }
        if (((len && b - 1 >= 0) || (!len && b - 1 > 0)) && (b - 1 != prev_b)) {
//            dp[len][prev_a][add] += f(len + 1, i, b - 1, 1, sa + to_string(i), sb + to_string(b - 1));
            dp[len][prev_a][add] += f(len + 1, i, b - 1, 1);
            dp[len][prev_a][add] %= mod;
        }
//        dp[len][prev_a][add] += f(len + 1, i, b, 0, sa + to_string(i), sb + to_string(b));
        dp[len][prev_a][add] += f(len + 1, i, b, 0);
        dp[len][prev_a][add] %= mod;
    }
    return dp[len][prev_a][add];
}

int main() {
    cin.tie(nullptr); cout.tie(nullptr);
    ios_base::sync_with_stdio(false);

    string sc;
    cin >> sc;
    c = vector<int> (sc.size());
    reverse(c.begin(), c.end());
    dp = vector<vector<vector<int>>> (sc.size() + 1, vector<vector<int>> (10, vector<int> (2, -1)));
    for (int i = 0; i < sc.size(); ++i) {
        c[i] = sc[i] - '0';
    }

//    cout << f(0, 0, 0, 0, "", "");
    cout << f(0, 0, 0, 0);

    return 0;
}