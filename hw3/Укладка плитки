#include "bits/stdc++.h"

using namespace std;

vector<short> used;

int n = 0;
int mod = 1e9 + 7;

vector<vector<int>> m;

int f(int pos) {
    if (m[pos][used[pos]]) {
        return m[pos][used[pos]];
    }

    switch (used[pos]) {
        case 0:
            used[pos] = 3;
            m[pos][0] += 2 * f(pos + 1);
            m[pos][0] %= mod;

            switch (used[pos + 1]) {
                case 0:
                    used[pos + 1] = 1;
                    m[pos][0] += f(pos + 1);
                    m[pos][0] %= mod;

                    used[pos + 1] = 2;
                    m[pos][0] += f(pos + 1);
                    m[pos][0] %= mod;

                    used[pos + 1] = 3;
                    m[pos][0] += f(pos + 1);
                    m[pos][0] %= mod;

                    used[pos + 1] = 0;
                    break;
                case 1:
                    used[pos + 1] = 3;

                    m[pos][0] += f(pos + 1);
                    m[pos][0] %= mod;

                    used[pos + 1] = 1;
                    break;
                case 2:
                    used[pos + 1] = 3;

                    m[pos][0] += f(pos + 1);
                    m[pos][0] %= mod;

                    used[pos + 1] = 2;
                    break;
            }
            used[pos] = 0;
            break;
        case 1:
            used[pos] = 3;
            m[pos][1] += f(pos + 1);
            m[pos][1] %= mod;

            switch(used[pos + 1]) {
                case 0:
                    used[pos + 1] = 2;

                    m[pos][1] += f(pos + 1);
                    m[pos][1] %= mod;

                    used[pos + 1] = 0;
                    break;
                case 1:
                    used[pos + 1] = 3;

                    m[pos][1] += f(pos + 1);
                    m[pos][1] %= mod;

                    used[pos + 1] = 1;
                    break;
            }
            used[pos] = 1;
            break;
        case 2:
            used[pos] = 3;
            m[pos][2] += f(pos + 1);
            m[pos][2] %= mod;

            switch (used[pos + 1]) {
                case 0:
                    used[pos + 1] = 1;

                    m[pos][2] += f(pos + 1);
                    m[pos][2] %= mod;

                    used[pos + 1] = 0;
                    break;
                case 2:
                    used[pos + 1] = 3;

                    m[pos][2] += f(pos + 1);
                    m[pos][2] %= mod;

                    used[pos + 1] = 2;
                    break;
            }
            used[pos] = 2;
            break;
        case 3:
            m[pos][3] += f(pos + 1);
            m[pos][3] %= mod;
            break;
    }
    return m[pos][used[pos]];
}

int main() {
    cin.tie(nullptr); cout.tie(nullptr);
    ios_base::sync_with_stdio(false);

    int k = 0;
    cin >> n >> k;

    m = vector<vector<int>> (n + 1, vector<int> (4, 0));
    used = vector<short> (n + 1, 0);
    for (int i = 0; i < k; ++i) {
        int x = 0;
        short y = 0;
        cin >> x >> y;

        used[x - 1] |= ((short) 1 << (y - 1));
    }
    used[n] = 3;
    m[n][used[n]] = 1;

    f(0);

    cout << (((long long) m[0][0] + m[0][1] + m[0][2] + m[0][3]) % mod);

    return 0;
}