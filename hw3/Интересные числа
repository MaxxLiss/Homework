#include "bits/stdc++.h"

using namespace std;

int mod = 1e9 + 7;
int dp[102][10];
string goal;

int f(int pos, int prev) {
    if (pos == goal.size()) {
        return 1;
    }
    int sm = 0;
    for (int i = prev + 1; i <= goal[pos] - '0'; ++i) {
        if (dp[pos][i]) {
            sm += dp[pos][i];
        } else {
            sm += f(pos + 1, i);
        }
        sm %= mod;
    }
    return sm;
}

string operator - (const string &s, int a) {
    vector<int> s1(s.size());
    bool take = true;
    for (int i = s.size() - 1; i >= 0; --i) {
        if (take) {
            s1[i] = s[i] - '0' - 1;
            if (s1[i] >= 0) {
                take = false;
            } else {
                s1[i] += 10;
            }
        } else {
            s1[i] = s[i] - '0';
        }
    }

    if (s.size() == 1) {
        return to_string(s1.front());
    }
    int ind = 0;
    if (s1.front() == 0) {
        ind++;
    }

    string new_s;
    for (int i = ind; i < s1.size(); ++i) {
        new_s += to_string(s1[i]);
    }
    return new_s;
}

int main() {
    cin.tie(nullptr); cout.tie(nullptr);
    ios_base::sync_with_stdio(false);

    string l, r;
    cin >> l >> r;

    for (auto &i : dp) {
        for (auto &j : i) {
            j = 0;
        }
    }

    goal = l - 1;
    int ans_l = f(0, 0);

    for (auto &i : dp) {
        for (auto &j : i) {
            j = 0;
        }
    }

    goal = r;
    int ans_r = f(0, 0);

    cout << ans_r - ans_l;

    return 0;
}