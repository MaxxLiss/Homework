#include "bits/stdc++.h"

using namespace std;

int main() {
    cin.tie(nullptr); cout.tie(nullptr);
    ios_base::sync_with_stdio(false);

    int n = 0, k = 0;
    cin >> n >> k;

    unordered_set<uint32_t> s;
    vector<uint32_t> v(n, 0), deg(k, 0);
    vector<int> cnt(n, 0);

    deg.front() = 1;
    for (int i = 1; i < k; ++i) {
        deg[i] = deg[i - 1] * 3;
    }

    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < k; ++j) {
            int a = 0;
            cin >> a;
            v[i] *= 3;
            v[i] += a;
        }
        s.insert(v[i]);
    }

    uint64_t ans = 0;
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) if (j != i) {
            uint32_t curr_i = v[i], curr_j = v[j], new_card = 0;
            for (int m = 0; m < k; ++m) {
                auto a = curr_i % 3, b = curr_j % 3;
                if (a == b) {
                    new_card += a * deg[m];
                } else {
                    new_card += (3 - (a | b)) * deg[m];
                }
                curr_i /= 3;
                curr_j /= 3;
            }
            if (s.find(new_card) != s.end()) {
                cnt[i]++;
            }
        }
        ans += (cnt[i] / 2) * (cnt[i] / 2 - 1) / 2;
    }

    cout << ans;

    return 0;
}