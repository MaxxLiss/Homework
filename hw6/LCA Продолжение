#include "bits/stdc++.h"

using namespace std;

const int N = 6e5, L = 20;

int d[N], up[N][L];

void update(int v, int p) {
    d[v] = d[p] + 1;
    up[v][0] = p;
    for (int i = 1; i < L; ++i) {
        up[v][i] = up[up[v][i - 1]][i - 1];
    }
}

int lca(int a, int b) {
    if (d[a] > d[b]) {
        swap(a, b);
    }

    int diff = d[b] - d[a];
    for (int i = 0; i < L; ++i) {
        if (diff & (1 << i)) {
            b = up[b][i];
        }
    }
    if (a == b) {
        return a;
    }

    for (int i = L - 1; i >= 0; --i) {
        auto tmp_a = up[a][i], tmp_b = up[b][i];
        if (tmp_a != tmp_b) {
            a = tmp_a;
            b = tmp_b;
        }
    }
    return up[a][0];
}

void solve() {
    string in;
    int a = 0, b = 0;

    cin >> in;
    cin >> a >> b;

    if (in[0] == 'A') {
        update(b, a);
    } else {
        cout << lca(a, b) << '\n';
    }
}

int main() {
    cin.tie(nullptr); cout.tie(nullptr);
    ios_base::sync_with_stdio(false);

    freopen("lca.in", "r", stdin);
    freopen("lca.out", "w", stdout);

    fill_n(up[1], L, 1);
    d[1] = 0;

    int t = 0;
    cin >> t;
    while (t--) {
        solve();
    }

    return 0;
}