#include "bits/stdc++.h"

using namespace std;

const uint64_t inf = 1e18;

int main() {
    cin.tie(nullptr); cout.tie(nullptr);
    ios_base::sync_with_stdio(false);

    int l1 = 0, l2 = 0, l3 = 0;
    cin >> l1 >> l2 >> l3;

    int c1 = 0, c2 = 0, c3 = 0;
    cin >> c1 >> c2 >> c3;

    int n = 0;
    cin >> n;

    int beg = 0, end = 0;
    cin >> beg >> end;
    beg--; end--;

    vector<int> pos(n, 0);
    for (int i = 1; i < n; ++i) {
        cin >> pos[i];
    }

    set<pair<int, uint64_t>> s1, s2, s3;
    s1.insert({0, beg});

    uint64_t ans = 0;

    for (int i = beg + 1; i <= end; ++i) {
        while (!s1.empty() && pos[s1.begin()->second] + l1 < pos[i]) {
            s2.insert(*s1.begin());
            s1.erase(s1.begin());
        }
        auto it1 = (s1.empty() ? inf : s1.begin()->first + c1);

        while (!s2.empty() && pos[s2.begin()->second] + l2 < pos[i]) {
            s3.insert(*s2.begin());
            s2.erase(s2.begin());
        }
        auto it2 = (s2.empty() ? inf : s2.begin()->first + c2);

        while (!s3.empty() && pos[s3.begin()->second] + l3 < pos[i]) {
            s3.erase(s3.begin());
        }
        auto it3 = (s3.empty() ? inf : s3.begin()->first + c3);

        if (i == end) {
            ans = min(it1, min(it2, it3));
        }

        if (it1 < it2) {
            if (it1 < it3) {
                s1.insert({it1, i});
            } else {
                s3.insert({it3, i});
            }
        } else {
            if (it2 < it3) {
                s2.insert({it2, i});
            } else {
                s3.insert({it3, i});
            }
        }
    }

    cout << ans;

    return 0;
}