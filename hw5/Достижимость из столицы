#include "bits/stdc++.h"

using namespace std;

const int N = 5e3 + 1;

deque<int> g[N];
set<pair<int, int>> s;

int connected[N];
void count_child(int v) {
    connected[v] = 1;
    for (auto to : g[v]) {
        if (!connected[to]) {
            count_child(to);
            connected[v] += connected[to];
        }
    }
}

int used[N];
void dfs(int v) {
    used[v] = 1;
    for (auto to : g[v]) if (!used[to]) {
            dfs(to);
        }
}

int main() {
    cin.tie(nullptr); cout.tie(nullptr);
    ios_base::sync_with_stdio(false);

    memset(used, 0, sizeof used);

    int n = 0, m = 0, start = 0;
    cin >> n >> m >> start;

    for (int i = 0; i < m; ++i) {
        int from = 0, to = 0;
        cin >> from >> to;
        g[from].push_back(to);
    }

    for (int i = 1; i <= n; ++i) {
        memset(connected, 0, sizeof connected);
        count_child(i);
        s.insert({-connected[i], i});
    }

    int ans = 0;
    dfs(start);

    for (auto pos : s) if (!used[pos.second]) {
            dfs(pos.second);
            ans++;
        }

    cout << ans;

    return 0;
}