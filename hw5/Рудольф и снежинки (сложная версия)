#include "bits/stdc++.h"

using namespace std;

const uint64_t INF = 4e18;

uint64_t mul(uint64_t a, uint64_t b) {
    if (INF / a < b) {
        return INF;
    }
    return a * b;
}

uint64_t bpow(uint64_t a, uint64_t p) {
    uint64_t res = 1;
    while (p && res != INF) {
        if (p & 1) {
            res = mul(res, a);
        }
        a = mul(a, a);
        p >>= 1;
    }
    return res;
}

void solve() {
    double n = 0;
    cin >> n;

    bool ans = false;
    double tmp = -1;
    for (int deg = 3; deg <= 65 && !ans; ++deg) {
        uint64_t l = 1, r = 1e9;
        while (l + 1 != r) {
            auto m = (l + r) / 2;
            auto q = bpow(m, deg);
            if (q == INF) {
                r = m;
                continue;
            }
            auto sum = (double) (q - 1) / (double) (m - 1);
            if (sum > n) {
                r = m;
            } else {
                tmp = sum;
                l = m;
            }
        }
        ans = (tmp == n);
    }
    cout << (ans ? "YES\n" : "NO\n");
}

int main() {
    cin.tie(nullptr); cout.tie(nullptr);
    ios_base::sync_with_stdio(false);

    int t = 0;
    cin >> t;

    while (t--) {
        solve();
    }

    return 0;
}